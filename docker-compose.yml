services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      LANGLITE_DB_HOST: ${LANGLITE_DB_HOST}
      LANGLITE_DB_PORT: ${LANGLITE_DB_PORT}
      LANGLITE_DB_DATABASE: ${LANGLITE_DB_DATABASE}
      LANGLITE_DB_USERNAME: ${LANGLITE_DB_USERNAME}
      LANGLITE_DB_PASSWORD: ${LANGLITE_DB_PASSWORD}
      LANGLITE_DB_SCHEMA: ${LANGLITE_DB_SCHEMA}
    depends_on:
      langlite_db:
        condition: service_healthy
    networks:
      - langlite
  langlite_db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${LANGLITE_DB_DATABASE}
      POSTGRES_USER: ${LANGLITE_DB_USERNAME}
      POSTGRES_PASSWORD: ${LANGLITE_DB_PASSWORD}
    ports:
      - "${LANGLITE_DB_PORT}:5432"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - langlite_volume:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${LANGLITE_DB_USERNAME} -d ${LANGLITE_DB_DATABASE}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - langlite

volumes:
  langlite_volume:
networks:
  langlite:
